*zeavim.txt*	Execute the documentation browser Zeal from Vim.

    For Vim version 7.0 and above	Last change: 2015-12-23

	ZEAVIM - EXECUTE THE DOCUMENTATION BROWSER ZEAL FROM VIM~
						from Kabbaj Amine~

Mail	: amine.kabb@gmail.com
Repo	: https://github.com/KabbAmine/zeavim.vim
License : This file is placed in the public domain.

========================================================================
|CONTENTS|				*zeavim-contents*

1. DESCRIPTION				|zeavim-description|
2. INSTALLATION				|zeavim-installation|
    2.1. Manual				|zeavim-installation:manual|
    2.2. With a plugin manager		|zeavim-installation:plugin-manager|
3. USAGE				|zeavim-usage|
4. MAPPING				|zeavim-mapping|
    4.1. Default mapping.		|zeavim-mapping:default|
    4.2. Custom mapping			|zeavim-mapping:custom|
5. COMMANDS				|zeavim-command|
    5.1. Main commands			|zeavim-command:main|
    5.2. Specify manually docset	|zeavim-command:docset|
6. SETTINGS				|zeavim-settings|
    6.1. Zeal's location		|zeavim-settings:location|
    6.2. Add file types			|zeavim-settings:new-types|
    6.3. Disable default mappings	|zeavim-settings:no-mapping|
    6.4. Docset name completion		|zeavim-settings:docset-completion|
7. NOTES				|zeavim-notes|

========================================================================
1. |DESCRIPTION|			*zeavim-description*

Zeavim allows to use Zeal(http://zealdocs.org) documentation browser directly from Vim(http://vim.org).

- Search word under cursor or a visual selection.
- Search without losing focus from Vim.
- Possibility to specify dynamically a docset.
- Narrow search with a query.
- Allows using multiple docsets.
- Docset name completion.
- Define you own docsets using file types, extentions or regex.
- Supports docsets specific to file names (e.g `gulpfile.js`)
- Works on GNU/Linux and Windows.

========================================================================
2. |INSTALLATION|			*zeavim-installation*

To use zeavim, you need of course to have Zeal installed. Grab it from here(http://zealdocs.org/download.html) and install it .

------------------------------------------------------------------------
2.1. Manual installation~
*zeavim-installation:manual*

Install the distributed files into Vim runtime directory which is usually `~/.vim/`, or `$HOME/vimfiles` on Windows.

------------------------------------------------------------------------
2.2. Using a plugin manager~
*zeavim-installation:plugin-manager*

The used keyword depends of your vim plugin manager: >
    Plug 'KabbAmine/zeavim.vim'
<
========================================================================
3. |USAGE|				*zeavim-usage*

1.  `<leader>z`
    Automatically define the docset and use the current word or visual selection as a query.

2.  `<leader><leader>z`
    Specify both docset (A default one is provided) and query (The docset name can be completed using `tab`, see part 6.4 for that).
    Multiple docsets can be defined, just separate them by a comma.

========================================================================
4. |MAPPING|				*zeavim-mapping*

------------------------------------------------------------------------
4.1. Default mappings~
*zeavim-mapping:default*

<Leader>z   or	 <Plug>Zeavim
	Launch Zeal with the current {word} as a keyword and the appropriate docset.

<Leader><leader>Z   or	 <Plug>ZVKeyDocset
	Specify a docset and keyword then launch Zeal.

<Leader>z   or	 <Plug>ZVVisSelection
	Lauch Zeal with the current visual selection as a keyword and the
	appropriate docset.

------------------------------------------------------------------------
4.2. Custom mappings~
*zeavim-mapping:custom*

You can easily change the default mapping for each action.

For example: >
  nmap ,z <Plug>Zeavim

Notice that for changing `<leader>z` in visual mode it's preferable to use
`vmap` >
  vmap ,,z <Plug>ZVVisSelection
>
========================================================================
5. |COMMANDS|				*zeavim-commands*

------------------------------------------------------------------------
5.1. Main commands~
*zeavim-command:main*

If you prefer, you can use commands instead of keyboard shortcuts.

Here are all of them: >
	Zeavim		" Normal
	ZvV		" VISUAL mode
	ZvKD		" Type docset and query

------------------------------------------------------------------------
5.2. Specify manually docset
*zeavim-command:docset*

If you need a lazy way to specify a docset, you can use: >
	Docset DOCSET_NAME

As an example, I'm working on a `scss` file but I want to get `compass`
documentation when using Zeavim, so I just need to specify manually this
docset: >
	Docset compass

Then Zeavim only for the current buffer will use `compass` as a docset. Note that you can define multiple docsets here.

The docset name can be completed, for that see part 6.4.

To revert that and get zeavim working like usually, a simple `Docset` without argument is enough.

========================================================================
6. |SETTINGS|				*zeavim-settings*

------------------------------------------------------------------------
6.1. Zeal's location~
*zeavim-settings:location*

By default zeavim looks for an executable named `zeal` on your PATH for UNIX and in `%ProgramFiles%/Zeal/zeal.exe` for Windows.
You can specify Zeal's location manually by adding in your vimrc: >
    let g:zv_zeal_executable = 'path/to/zeal'

Or if you're using both OS: >
    let g:zv_zeal_executable = has('win32') ?
			\ 'path/to/zeal.exe' :
			\ 'path/to/zeal'

------------------------------------------------------------------------
6.2. Adding file types~
*zeavim-settings:new-types*

To define the docset, the plugin uses by order one of those:

* The value defined by `:Docset` command.
* The file name.
* The file extension.
* The file type.

If you need to add another file names, extensions or file types (Or overwrite those by default), you can use `g:zv_file_types` variable.

It's a dictionary where keys can be filename, file extension or file type and values are the docset names.

>
    " For the docset, not mandatory but you can use underscores instead of spaces
    let g:zv_file_types = {
        \ 'FILE_NAME' : 'DOCSET_NAME',
        \ 'EXTENSION' : 'DOCSET NAME',
        \ 'FILE_TYPE' : 'DOCSET_NAME',
        \ }

Here again you can define multiple docsets for a type, just separate them by a comma.
>
    'TYPE': 'DOCSET1,DOCSET2'

If a key starts with `^`, it will be considered as a regex. It is useful if you want to define many types to one docset (Note that the regex will use vim magic).

e.g >
    let g:zv_file_types = {
    			\ 'cpp'                   : 'c++',
    			\ '^(G|g)runtfile\.'      : 'grunt',
    			\ '^(G|g)ulpfile\.'       : 'gulp',
    			\ '.htaccess'             : 'apache_http_server',
    			\ '^(md|mdown|mkd|mkdn)$' : 'markdown',
    			\ 'css'                   : 'css,foundation,bootstrap_4',
			\ }

N.B: All the values above are already defined in the plugin, a part the `css` one.
<
------------------------------------------------------------------------
6.3. Disable default mappings~
*zeavim-settings:no-mapping*

You can disable the default mappings by adding to your vimrc: >
  let g:zv_disable_mapping = 1

If you're using all the functionalities of the plugin (NORMAL, VISUAL, docset and query manual input), no need of setting this variable, just *map* the `<Plug>`'s normally.

------------------------------------------------------------------------
6.4. Docset name completion~
*zeavim-settings:docset-completion*

When using `<leader><leader>z` or the command `Docset`, you can get a docset name completion with `Tab`.
The docset names are taken from your zeal's docset directory (The one specified in Zeal's options).

By default zeavim assumes that Zeal docsets are located in `%LOCALAPPDATA%\Local\Zeal\Zeal\docsets`, which expands into something like `C:\Users\you\AppData\Local\Zeal\Zeal\docsets` for Windows and `~/.local/share/Zeal/Zeal/docsets` for UNIX systems.

If you have them in a different folder, just set the correct path in `g:zv_docsets_dir` variable.

e.g >
    let g:zv_docsets_dir = has('win32') ?
    			\ 'path/to/docsets/in/win' :
    			\ 'path/to/docsets/in/unix'

**THE NEXT OPTION WILL BE REMOVED, SO DON'T RELAY ON IT**

Another way to enable completion just for a few docsets (Why not!), instead of `g:zv_docsets_dir` use `g:zv_lazy_docset_list`.

e.g >
    let g:zv_lazy_docset_list = [ 'Compass', 'Bootstrap', 'Vagrant', 'Font Awesome' ]

========================================================================
7. |NOTES|				*zeavim-notes*

Zeavim was my first vim plugin and it was created in the beginning for a personal use, so please feel free to report issues and submit PR. I usually answer in 1-2 days.

Thanks to [Jerzy Kozera](https://github.com/jkozera) for creating such wonderful open-source application.

Thanks to Bram Moolenaar for creating the best piece of software in the world :heart:

Thanks to you if you're using zeavim.

========================================================================
vim:tw=78:ts=8:ft=help:norl:noet
